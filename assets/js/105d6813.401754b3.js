"use strict";(self.webpackChunk_rnx_kit_docsite=self.webpackChunk_rnx_kit_docsite||[]).push([[2129],{3905:(e,t,n)=>{n.d(t,{Zo:()=>d,kt:()=>h});var i=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,i)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function r(e,t){if(null==e)return{};var n,i,a=function(e,t){if(null==e)return{};var n,i,a={},o=Object.keys(e);for(i=0;i<o.length;i++)n=o[i],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(i=0;i<o.length;i++)n=o[i],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=i.createContext({}),p=function(e){var t=i.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},d=function(e){var t=p(e.components);return i.createElement(s.Provider,{value:t},e.children)},c="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return i.createElement(i.Fragment,{},t)}},m=i.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,s=e.parentName,d=r(e,["components","mdxType","originalType","parentName"]),c=p(n),m=a,h=c["".concat(s,".").concat(m)]||c[m]||u[m]||o;return n?i.createElement(h,l(l({ref:t},d),{},{components:n})):i.createElement(h,l({ref:t},d))}));function h(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,l=new Array(o);l[0]=m;var r={};for(var s in t)hasOwnProperty.call(t,s)&&(r[s]=t[s]);r.originalType=e,r[c]="string"==typeof e?e:a,l[1]=r;for(var p=2;p<o;p++)l[p]=n[p];return i.createElement.apply(null,l)}return i.createElement.apply(null,n)}m.displayName="MDXCreateElement"},9906:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>l,default:()=>u,frontMatter:()=>o,metadata:()=>r,toc:()=>p});var i=n(7462),a=(n(7294),n(3905));const o={},l="react-native-host",r={unversionedId:"tools/react-native-host",id:"tools/react-native-host",title:"react-native-host",description:"@rnx-kit/react-native-host simplifies React Native initialization.",source:"@site/docs/tools/react-native-host.md",sourceDirName:"tools",slug:"/tools/react-native-host",permalink:"/rnx-kit/docs/tools/react-native-host",draft:!1,editUrl:"https://github.com/microsoft/rnx-kit/tree/main/docsite/docs/tools/react-native-host.md",tags:[],version:"current",frontMatter:{},sidebar:"toolsSidebar",previous:{title:"react-native-auth",permalink:"/rnx-kit/docs/tools/react-native-auth"},next:{title:"react-native-lazy-index",permalink:"/rnx-kit/docs/tools/react-native-lazy-index"}},s={},p=[{value:"Installation",id:"installation",level:2},{value:"Usage",id:"usage",level:2},{value:"iOS/macOS",id:"iosmacos",level:3},{value:"API",id:"api",level:2},{value:"ReactNativeHost",id:"reactnativehost",level:3},{value:"<code>initWithConfig</code>",id:"initwithconfig",level:4},{value:"<code>shutdown</code>",id:"shutdown",level:4},{value:"<code>usingModule</code>",id:"usingmodule",level:4},{value:"<code>hostFromRootView</code>",id:"hostfromrootview",level:4},{value:"<code>viewWithModuleName</code>",id:"viewwithmodulename",level:4},{value:"RNXConfig",id:"rnxconfig",level:3},{value:"<code>isDevLoadingViewEnabled</code>",id:"isdevloadingviewenabled",level:4},{value:"<code>shouldReleaseBridgeWhenBackgrounded</code>",id:"shouldreleasebridgewhenbackgrounded",level:4},{value:"<code>onFatalError</code>",id:"onfatalerror",level:4}],d={toc:p},c="wrapper";function u(e){let{components:t,...n}=e;return(0,a.kt)(c,(0,i.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"react-native-host"},"react-native-host"),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"@rnx-kit/react-native-host")," simplifies React Native initialization."),(0,a.kt)("p",null,"The aim of this package is to provide a backwards (and forwards) compatible way\nof initializing React Native, regardless of whether you're on New Architecture\nor have gone fully bridgeless.",(0,a.kt)("inlineCode",{parentName:"p"},"@rnx-kit/react-native-host")," will also a provide a\nsimple way to enable split bundles and service delivery."),(0,a.kt)("h2",{id:"installation"},"Installation"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-sh"},"yarn add @rnx-kit/react-native-host --dev\n")),(0,a.kt)("p",null,"or if you're using npm"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-sh"},"npm add --save-dev @rnx-kit/react-native-host\n")),(0,a.kt)("h2",{id:"usage"},"Usage"),(0,a.kt)("h3",{id:"iosmacos"},"iOS/macOS"),(0,a.kt)("blockquote",null,(0,a.kt)("p",{parentName:"blockquote"},"To see a working example how to use this library for iOS/macOS, please refer to ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/microsoft/react-native-test-app/tree/trunk/ios/ReactTestApp"},"react-native-test-app"),".")),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"https://github.com/react-native-community/cli/blob/10.x/docs/autolinking.md"},"Autolinking"),"\nshould make this module available to your app project."),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Replace instances of ",(0,a.kt)("inlineCode",{parentName:"li"},"RCTBridgeDelegate")," with ",(0,a.kt)("inlineCode",{parentName:"li"},"RNXHostConfig"),". The latter is a\nsuperset and is backwards compatible."),(0,a.kt)("li",{parentName:"ul"},"Replace instantiation of ",(0,a.kt)("inlineCode",{parentName:"li"},"RCTBridge")," with ",(0,a.kt)("inlineCode",{parentName:"li"},"ReactNativeHost"),". ",(0,a.kt)("inlineCode",{parentName:"li"},"ReactNativeHost"),"\nwill instantiate the appropriate modules required for your setup. It will also\nhandle New Architecture configuration as necessary."),(0,a.kt)("li",{parentName:"ul"},"Instead of instantiating ",(0,a.kt)("inlineCode",{parentName:"li"},"RCTRootView")," directly, use\n",(0,a.kt)("inlineCode",{parentName:"li"},"-[ReactNativeHost viewWithModuleName:initialProperties:]")," to create your root\nviews.")),(0,a.kt)("p",null,"For example, if you previously had something like this:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-objc"},"// AppDelegate.h\n@import React;\n@import UIKit;\n\n@interface AppDelegate : UIResponder <UIApplicationDelegate, RCTBridgeDelegate>\n@end\n\n// AppDelegate.m\n@implementation AppDelegate\n\n- (BOOL)application:(UIApplication *)application\n    didFinishLaunchingWithOptions:(NSDictionary *)launchOptions\n{\n    ...\n\n    RCTBridge *bridge = [[RCTBridge alloc] initWithDelegate:self\n                                              launchOptions:launchOptions];\n    RCTRootView *rootView = [[RCTRootView alloc] initWithBridge:bridge\n                                                     moduleName:moduleName\n                                              initialProperties:initialProperties];\n\n    ...\n}\n\n@end\n")),(0,a.kt)("p",null,"You should instead have:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-objc"},"// AppDelegate.h\n@import ReactNativeHost;\n@import UIKit;\n\n@interface AppDelegate : UIResponder <UIApplicationDelegate, RNXHostConfig>\n@end\n\n// AppDelegate.m\n@implementation AppDelegate\n\n- (BOOL)application:(UIApplication *)application\n    didFinishLaunchingWithOptions:(NSDictionary *)launchOptions\n{\n    ...\n\n    ReactNativeHost *host = [[ReactNativeHost alloc] initWithConfig:self];\n    UIView *rootView = [host viewWithModuleName:moduleName\n                              initialProperties:initialProperties];\n\n    ...\n}\n\n@end\n")),(0,a.kt)("h2",{id:"api"},"API"),(0,a.kt)("h3",{id:"reactnativehost"},"ReactNativeHost"),(0,a.kt)("p",null,"Instantiates the appropriate modules required for the setup. It handles New Architecture if necessary."),(0,a.kt)("h4",{id:"initwithconfig"},(0,a.kt)("inlineCode",{parentName:"h4"},"initWithConfig")),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Swift name:")," ",(0,a.kt)("inlineCode",{parentName:"p"},"init(_:)")),(0,a.kt)("p",null,"Creates an instance of ",(0,a.kt)("inlineCode",{parentName:"p"},"ReactNativeHost")," using the designated initializer."),(0,a.kt)("p",null,"Objective-C:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-objc"},"ReactNativeHost *host = [[ReactNativeHost alloc] initWithConfig:self];\n")),(0,a.kt)("p",null,"Swift:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-swift"},"let host = ReactNativeHost(config: self)\n")),(0,a.kt)("h4",{id:"shutdown"},(0,a.kt)("inlineCode",{parentName:"h4"},"shutdown")),(0,a.kt)("p",null,"Shuts down the React Native instance"),(0,a.kt)("h4",{id:"usingmodule"},(0,a.kt)("inlineCode",{parentName:"h4"},"usingModule")),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Swift name:")," ",(0,a.kt)("inlineCode",{parentName:"p"},"using")),(0,a.kt)("p",null,"Retrieves or initializes a desired native module. Parameters:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"moduleClass")," - class of the native module to initialize or retrieve"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"block")," - block that gets called when the native module is retrieved")),(0,a.kt)("p",null,"Objective-C:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-objc"},"[host usingModule:[MyNativeModuleClass class] block:^(id<RCTBridgeModule> module) {\n    if (![module isKindOfClass:[MyNativeModuleClass class]]) {\n        return;\n    }\n    MyNativeModuleClass *myNativeModule = (MyNativeModuleClass *)module;\n    // Use the native module here\n}];\n")),(0,a.kt)("p",null,"Swift:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-swift"},"host.using(module: MyNativeModuleClass.self) {\n  guard let myNativeModule = module as? MyNativeModuleClass else {\n    return\n  }\n  // Use the native module here\n}\n")),(0,a.kt)("h4",{id:"hostfromrootview"},(0,a.kt)("inlineCode",{parentName:"h4"},"hostFromRootView")),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Swift name:")," ",(0,a.kt)("inlineCode",{parentName:"p"},"host")),(0,a.kt)("p",null,"Retrieves the ",(0,a.kt)("inlineCode",{parentName:"p"},"ReactNativeHost")," instance that view belongs to."),(0,a.kt)("h4",{id:"viewwithmodulename"},(0,a.kt)("inlineCode",{parentName:"h4"},"viewWithModuleName")),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Swift name:")," ",(0,a.kt)("inlineCode",{parentName:"p"},"view")),(0,a.kt)("p",null,"Creates a React root view with the specified module and initial properties. Parameters:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"moduleName")," - name of the module to create root view of"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"initialProperties")," - properties passed to the module")),(0,a.kt)("p",null,"Objective-C:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-objc"},"ReactNativeHost *host = [[ReactNativeHost alloc] initWithConfig:self];\nUIView *rootView = [host viewWithModuleName:moduleName\n                         initialProperties:initialProperties];\n")),(0,a.kt)("p",null,"Swift:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-swift"},"let view = host.view(\n    moduleName: moduleName,\n    initialProperties: initialProperties\n)\n")),(0,a.kt)("h3",{id:"rnxconfig"},"RNXConfig"),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"RNXHostConfig")," is a superset of ",(0,a.kt)("inlineCode",{parentName:"p"},"RCTBridgeDelegate")," and it's backwards compatible."),(0,a.kt)("h4",{id:"isdevloadingviewenabled"},(0,a.kt)("inlineCode",{parentName:"h4"},"isDevLoadingViewEnabled")),(0,a.kt)("p",null,"Returns whether the loading view should be visible while loading JavaScript"),(0,a.kt)("h4",{id:"shouldreleasebridgewhenbackgrounded"},(0,a.kt)("inlineCode",{parentName:"h4"},"shouldReleaseBridgeWhenBackgrounded")),(0,a.kt)("p",null,"Returns whether the bridge should be released when the app is in the background"),(0,a.kt)("h4",{id:"onfatalerror"},(0,a.kt)("inlineCode",{parentName:"h4"},"onFatalError")),(0,a.kt)("p",null,"Handles a fatal error"))}u.isMDXComponent=!0}}]);