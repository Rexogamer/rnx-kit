"use strict";(self.webpackChunk_rnx_kit_docsite=self.webpackChunk_rnx_kit_docsite||[]).push([[8062],{3905:(t,e,n)=>{n.d(e,{Zo:()=>p,kt:()=>h});var a=n(7294);function r(t,e,n){return e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}function i(t,e){var n=Object.keys(t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(t);e&&(a=a.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),n.push.apply(n,a)}return n}function o(t){for(var e=1;e<arguments.length;e++){var n=null!=arguments[e]?arguments[e]:{};e%2?i(Object(n),!0).forEach((function(e){r(t,e,n[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(n,e))}))}return t}function l(t,e){if(null==t)return{};var n,a,r=function(t,e){if(null==t)return{};var n,a,r={},i=Object.keys(t);for(a=0;a<i.length;a++)n=i[a],e.indexOf(n)>=0||(r[n]=t[n]);return r}(t,e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(t);for(a=0;a<i.length;a++)n=i[a],e.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(t,n)&&(r[n]=t[n])}return r}var s=a.createContext({}),u=function(t){var e=a.useContext(s),n=e;return t&&(n="function"==typeof t?t(e):o(o({},e),t)),n},p=function(t){var e=u(t.components);return a.createElement(s.Provider,{value:e},t.children)},c="mdxType",d={inlineCode:"code",wrapper:function(t){var e=t.children;return a.createElement(a.Fragment,{},e)}},m=a.forwardRef((function(t,e){var n=t.components,r=t.mdxType,i=t.originalType,s=t.parentName,p=l(t,["components","mdxType","originalType","parentName"]),c=u(n),m=r,h=c["".concat(s,".").concat(m)]||c[m]||d[m]||i;return n?a.createElement(h,o(o({ref:e},p),{},{components:n})):a.createElement(h,o({ref:e},p))}));function h(t,e){var n=arguments,r=e&&e.mdxType;if("string"==typeof t||r){var i=n.length,o=new Array(i);o[0]=m;var l={};for(var s in e)hasOwnProperty.call(e,s)&&(l[s]=e[s]);l.originalType=t,l[c]="string"==typeof t?t:r,o[1]=l;for(var u=2;u<i;u++)o[u]=n[u];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},3663:(t,e,n)=>{n.r(e),n.d(e,{assets:()=>s,contentTitle:()=>o,default:()=>d,frontMatter:()=>i,metadata:()=>l,toc:()=>u});var a=n(7462),r=(n(7294),n(3905));const i={},o="react-native-auth",l={unversionedId:"tools/react-native-auth",id:"tools/react-native-auth",title:"react-native-auth",description:"@rnx-kit/react-native-auth provides a cross-app uniform API for user",source:"@site/docs/tools/react-native-auth.md",sourceDirName:"tools",slug:"/tools/react-native-auth",permalink:"/rnx-kit/docs/tools/react-native-auth",draft:!1,editUrl:"https://github.com/microsoft/rnx-kit/tree/main/docsite/docs/tools/react-native-auth.md",tags:[],version:"current",frontMatter:{},sidebar:"toolsSidebar",previous:{title:"metro-serializer-esbuild",permalink:"/rnx-kit/docs/tools/metro-serializer-esbuild"},next:{title:"react-native-host",permalink:"/rnx-kit/docs/tools/react-native-host"}},s={},u=[{value:"Install",id:"install",level:2},{value:"Usage",id:"usage",level:2},{value:"Motivation",id:"motivation",level:2}],p={toc:u},c="wrapper";function d(t){let{components:e,...n}=t;return(0,r.kt)(c,(0,a.Z)({},p,n,{components:e,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"react-native-auth"},"react-native-auth"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"@rnx-kit/react-native-auth")," provides a cross-app uniform API for user\nauthentication."),(0,r.kt)("h2",{id:"install"},"Install"),(0,r.kt)("p",null,"Add the dependency to your project:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"npm add @rnx-kit/react-native-auth\n")),(0,r.kt)("p",null,"If you're using a different manager, swap out ",(0,r.kt)("inlineCode",{parentName:"p"},"npm")," with your package manager of\nchoice."),(0,r.kt)("h2",{id:"usage"},"Usage"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},'import {\n  acquireTokenWithScopes,\n  isAvailable,\n} from "@rnx-kit/react-native-auth";\n\nconst scopes = ["user.read"];\nconst userPrincipalName = "arnold@contoso.com";\n\nif (isAvailable()) {\n  const result = await acquireTokenWithScopes(\n    scopes,\n    userPrincipalName,\n    "MicrosoftAccount"\n  );\n} else {\n  // Use an alternate authentication method\n}\n')),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Category"),(0,r.kt)("th",{parentName:"tr",align:null},"Type Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"types"),(0,r.kt)("td",{parentName:"tr",align:null},"AccountType"),(0,r.kt)("td",{parentName:"tr",align:null},"Account types. Current valid types are Microsoft accounts (or MSA) and organizational (M365), but can be extended to support other types, e.g. Apple, Google, etc.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"types"),(0,r.kt)("td",{parentName:"tr",align:null},"AuthErrorAndroid"),(0,r.kt)("td",{parentName:"tr",align:null},"The authentication error object contains a stack trace on Android.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"types"),(0,r.kt)("td",{parentName:"tr",align:null},"AuthErrorIOS"),(0,r.kt)("td",{parentName:"tr",align:null},"The authentication error object contains a stack trace on iOS.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"types"),(0,r.kt)("td",{parentName:"tr",align:null},"AuthErrorNative"),(0,r.kt)("td",{parentName:"tr",align:null},"The authentication error object. May contain a native stack trace.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"types"),(0,r.kt)("td",{parentName:"tr",align:null},"AuthErrorType"),(0,r.kt)("td",{parentName:"tr",align:null},"The type of error that occurred during authentication.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"types"),(0,r.kt)("td",{parentName:"tr",align:null},"AuthErrorUserInfo"),(0,r.kt)("td",{parentName:"tr",align:null},"Authentication error details provided by the underlying implementation. This object can be used to provide the inner exception, or a more user friendly error message.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"types"),(0,r.kt)("td",{parentName:"tr",align:null},"AuthResult"),(0,r.kt)("td",{parentName:"tr",align:null},"Authentication result returned on success.")))),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Category"),(0,r.kt)("th",{parentName:"tr",align:null},"Function"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"-"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"acquireTokenWithResource(resource, userPrincipalName, accountType)")),(0,r.kt)("td",{parentName:"tr",align:null},"Acquires a token for a resource.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"-"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"acquireTokenWithScopes(scopes, userPrincipalName, accountType)")),(0,r.kt)("td",{parentName:"tr",align:null},"Acquires a token with specified scopes.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"-"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"isAvailable()")),(0,r.kt)("td",{parentName:"tr",align:null},"Returns whether this module is available.")))),(0,r.kt)("h2",{id:"motivation"},"Motivation"),(0,r.kt)("p",null,"Many features we build require authentication. The tricky thing about\nauthentication in brownfield apps (i.e. a native app hosting a React Native\ninstance) is that we want to reuse the auth code that the hosting app already\nhas to access the keychain and enable single sign-on. This excludes the use of\nmost React Native auth libraries out there since they are more geared towards\nstandalone use. Additionally, all apps implement this in different ways, so most\nfeature teams implement their own solution for providing access tokens to their\nfeatures during the development loop, or they rely on their hosting app to\nprovide such a solution. Solutions are often custom-made for the current app and\ncannot be shared with others without significant effort. They will also have to\nduplicate this effort when integrating into other apps."),(0,r.kt)("p",null,"This module aims to define a standard way to acquire access tokens so that React\nNative feature authors no longer have to care about the underlying\nimplementations. The idea is that by abstracting away the implementation\ndetails, React Native features can more easily be integrated into any app that\nprovides an implementation of this module, without having to duplicate the\neffort of others."))}d.isMDXComponent=!0}}]);